AWSTemplateFormatVersion: '2010-09-09'
Description: >-
  This template creates a managed Microsoft AD Directory Service into private subnets
  in separate Availability Zones inside a VPC. The default Domain Administrator user
  is 'admin'. For adding members to the domain, ensure that they are launched into
  the domain member security group created by this template and then configure them
  to use the AD instances fixed private IP addresses as the DNS server. **WARNING**
  This template creates Amazon EC2 Windows instance and related resources. You will
  be billed for the AWS resources used if you create a stack from this template. (qs-1qup6rad4)
Metadata:
  QuickStartDocumentation:
    EntrypointName: "Launch AWS Managed Active Directory into an existing VPC"
    Order: "5"
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Network configuration
        Parameters:
          - VPCCIDR
          - VPCID
          - DHCPOptionSet
          - PrivateSubnet1ID
          - PrivateSubnet2ID
      - Label:
          default: AWS Managed Microsoft Active Directory configuration
        Parameters:
          - DomainDNSName
          - DomainNetBIOSName
          - DomainAdminPassword
          - ADEdition
      - Label:
          default: Microsoft Windows Server management instance
        Parameters:
          - MgmtServer
          - MgmtServerInstanceType
          - MgmtAmi
          - MgmtDataDriveSizeGiB
          - MgmtServerNetBIOSName
          - KeyPairName
      - Label:
          default: Microsoft Active Directory Certificate Services Configuration
        Parameters:
          - PKI
          - CaServerInstanceType
          - CaAmi
          - CaDataDriveSizeGiB
          - OrCaServerNetBIOSName
          - EntCaServerNetBIOSName
          - CaKeyLength
          - CaHashAlgorithm
          - OrCaValidityPeriodUnits          
          - CaValidityPeriodUnits
          - UseS3ForCRL
          - S3CRLBucketName
      - Label:
          default: AWS Quick Start configuration
        Parameters:
          - QSS3BucketName
          - QSS3KeyPrefix
          - QSS3BucketRegion
    ParameterLabels:
      VPCCIDR:
        default: VPC CIDR
      VPCID:
        default: VPC ID
      DHCPOptionSet:
        default: Create a DHCP Options set 
      PrivateSubnet1ID:
        default: Private Subnet 1 ID
      PrivateSubnet2ID:
        default: Private Subnet 2 ID
      DomainDNSName:
        default: Domain DNS name
      DomainNetBIOSName:
        default: Domain NetBIOS name
      DomainAdminPassword:
        default: Domain Admin password
      ADEdition:
        default: AWS Microsoft AD edition
      MgmtServer:
        default: Deploy management server
      MgmtServerInstanceType:
        default: Management instance instance type
      MgmtAmi:
        default: Management instance SSM parameter value to grab the lastest AMI ID
      MgmtDataDriveSizeGiB:
        default: Size of the data drive in GiB
      MgmtServerNetBIOSName:
        default: Management instance NetBIOS name
      KeyPairName:
        default: Public/private key pairs allow you to securely connect to your instance
      PKI:
        default: Do you want to Deploy PKI Infrastructure what kind Two Tier or One Tier
      CaServerInstanceType:
        default: CA Instance Type
      CaAmi:
        default: CA SSM Parameter Value to grab the lastest AMI ID
      CaDataDriveSizeGiB:
        default: CA size of the Data Drive in GiB
      OrCaServerNetBIOSName:
        default: Offline Root CA NetBIOS Name (Only Used For Two Tier PKI)
      EntCaServerNetBIOSName:
        default: Enterprise Root or Subordinate CA NetBIOS Name
      CaKeyLength:
        default: CA Key Length
      CaHashAlgorithm:
        default: CA Hash Algorithm
      OrCaValidityPeriodUnits:
        default: Offline Root CA Certificate Validity Period in Years (Only Used For Two Tier PKI)
      CaValidityPeriodUnits:
        default: Enterprise Root or Subordinate CA Certificate Validity Period in Years
      UseS3ForCRL:
        default: Use S3 for Enterprise Root CA CRL location
      S3CRLBucketName:
        default: S3 bucket name for Enterprise Root CA CRL
      QSS3BucketName:
        default: Quick Start S3 bucket name
      QSS3BucketRegion:
        default: Quick Start S3 bucket Region
      QSS3KeyPrefix:
        default: Quick Start S3 key prefix
Parameters:
  VPCCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/16
    Description: CIDR Block for the VPC
    Type: String
  VPCID:
    Description: ID of the VPC (e.g., vpc-0343606e)
    Type: AWS::EC2::VPC::Id
  DHCPOptionSet:
    AllowedValues:
      - 'Yes'
      - 'No'
    Default: 'Yes'
    Description: Do you want to create a new DHCP Options Set
    Type: String
  PrivateSubnet1ID:
    Description: ID of the private subnet 1 in Availability Zone 1 (e.g., subnet-a0246dcd)
    Type: AWS::EC2::Subnet::Id
  PrivateSubnet2ID:
    Description: ID of the private subnet 2 in Availability Zone 2 (e.g., subnet-a0246dcd)
    Type: AWS::EC2::Subnet::Id
  DomainDNSName:
    Description: Fully qualified domain name (FQDN) of the forest root domain e.g.
      example.com
    Type: String
    Default: example.com
    MinLength: '2'
    MaxLength: '255'
    AllowedPattern: '[a-zA-Z0-9\-]+\..+'
  DomainNetBIOSName:
    Description: NetBIOS name of the domain (upto 15 characters) for users of earlier
      versions of Windows e.g. EXAMPLE
    Type: String
    Default: example
    MinLength: '1'
    MaxLength: '15'
    AllowedPattern: '[a-zA-Z0-9\-]+'
  DomainAdminPassword:
    Description: Password for the domain admin user. Must be at least 8 characters
      containing letters, numbers and symbols
    Type: String
    MinLength: '8'
    MaxLength: '32'
    AllowedPattern: (?=^.{6,255}$)((?=.*\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*
    NoEcho: 'true'
  ADEdition:
    AllowedValues:
      - Standard
      - Enterprise
    Default: Enterprise
    Description: The AWS Microsoft AD edition. Valid values include Standard and Enterprise.
    Type: String
  MgmtServer:
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'true'
    Description: Deploy a management instance
    Type: String
  MgmtServerInstanceType:
    AllowedValues:
      - t2.small
      - t3.small
      - t2.medium
      - t3.medium
      - t2.large
      - t3.large
    Default: t3.medium
    Description: Amazon EC2 instance type for the Management Instance
    Type: String
  MgmtAmi:
    Type: String
    Description: Management Instance SSM Parameter Value to grab the lastest AMI ID
    Default: '/aws/service/ami-windows-latest/Windows_Server-2019-English-Full-Base'
  MgmtDataDriveSizeGiB:
    Type: 'Number'
    Default: '2'
    Description: Size of the Data Drive in GiB
  MgmtServerNetBIOSName:
    AllowedPattern: '[a-zA-Z0-9\-]+'
    Description: NetBIOS name of the Management Instance server (up to 15 characters)
    MaxLength: '15'
    MinLength: '1'
    Type: String
    Default: MGMT1
  KeyPairName:
    Description: Public/private key pairs allow you to securely connect to your instance
      after it launches
    Type: AWS::EC2::KeyPair::KeyName
  PKI:
    AllowedValues:
      - 'One-Tier'
      - 'Two-Tier'
      - 'No'
    Default: 'No'
    Description: Do you want to Deploy PKI Infrastructure if so what kind, Two Tier or One Tier
    Type: String
  CaServerInstanceType:
    AllowedValues:
      - t2.small
      - t3.small
      - t2.medium
      - t3.medium
      - t2.large
      - t3.large
    Default: t3.medium
    Description: Amazon EC2 instance type for the CA instance(s)
    Type: String
  CaAmi:
    Type: String
    Description: Enterprise Root CA SSM Parameter Value to grab the lastest AMI ID
    Default: '/aws/service/ami-windows-latest/Windows_Server-2019-English-Full-Base'
  CaDataDriveSizeGiB:
    Type: 'Number'
    Default: '2'
    Description: Size of the Data Drive in GiB
  OrCaServerNetBIOSName:
    AllowedPattern: '[a-zA-Z0-9\-]+'
    Description: NetBIOS name of the Offline Root CA server (Only Used For Two Tier PKI) (up to 15 characters)
    MaxLength: '15'
    MinLength: '1'
    Type: String
    Default: ORCA1
  EntCaServerNetBIOSName:
    AllowedPattern: '[a-zA-Z0-9\-]+'
    Description: NetBIOS name of the Enterprise Root or Subordinate CA server (up to 15 characters)
    MaxLength: '15'
    MinLength: '1'
    Type: String
    Default: ENTCA1
  CaKeyLength:
    Description: CA Key Length
    AllowedValues:
      - '2048'
      - '4096'
    Default: '2048'
    Type: String
  CaHashAlgorithm:
    Description: CA Hash Algorithm
    AllowedValues:
      - 'SHA256'
      - 'SHA384'
      - 'SHA512'
    Default: 'SHA256'
    Type: String
  OrCaValidityPeriodUnits:
    Description: Offline Root CA Certificate Validity Period in Years (Only Used For Two Tier PKI)
    Default: '10'
    Type: String
  CaValidityPeriodUnits:
    Description: Enterprise Root or Subordinate CA Certificate Validity Period in Years
    Default: '5'
    Type: String
  UseS3ForCRL:
    Description: Use S3 for Enterprise Root CA CRL location
    AllowedValues:
      - 'Yes'
      - 'No'
    Default: 'No'
    Type: String
  S3CRLBucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    Default: examplebucket
    Description: S3 bucket name for Enterprise Root CA CRL. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).
    Type: String
  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: aws-quickstart
    Description: S3 bucket name for the Quick Start assets. Quick Start bucket name
      can include numbers, lowercase letters, uppercase letters, and hyphens (-).
      It cannot start or end with a hyphen (-).
    Type: String
  QSS3BucketRegion:
    Default: us-east-1
    Description: The AWS Region where the Quick Start S3 bucket (QSS3BucketName) is hosted. When using your own bucket, you must specify this value.
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slash (/).
    Default: quickstart-microsoft-activedirectory/
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/).
    Type: String
Rules:
  SubnetsInVPC:
    Assertions:
      - Assert: !EachMemberIn
          - !ValueOfAll
            - AWS::EC2::Subnet::Id
            - VpcId
          - !RefAll 'AWS::EC2::VPC::Id'
        AssertDescription: All subnets must in the VPC
  S3CRLBucketNameValidation:
    RuleCondition: !And
      - !Equals
        - !Ref UseS3ForCRL
        - 'Yes'
      - !Not 
        - !Equals
          - !Ref PKI
          - 'No'
    Assertions:
      - AssertDescription: CRL BucketName cannot must be valid BucketName
        Assert: !Not [!Equals [!Ref S3CRLBucketName, 'examplebucket']]
Conditions:
  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, 'aws-quickstart']
  ShouldCreateDHCPOption: !Not [!Equals [!Ref DHCPOptionSet, 'No']]
  ShouldCreateMgmtServer: !Equals [!Ref MgmtServer, 'true']
  ShouldCreateOneTierPkiResource: !Equals [!Ref PKI, 'One-Tier']
  ShouldCreateTwoTierPkiResource: !Equals [!Ref PKI, 'Two-Tier']
Resources:
  DHCPOptions:
    Type: AWS::EC2::DHCPOptions
    DependsOn: 
      - MicrosoftAD
    Condition: ShouldCreateDHCPOption
    Properties:
      DomainName: !Ref 'DomainDNSName'
      DomainNameServers: !GetAtt 'MicrosoftAD.DnsIpAddresses'
      Tags:
        - Key: Domain
          Value: !Ref 'DomainDNSName'
  VPCDHCPOptionsAssociation:
    Type: AWS::EC2::VPCDHCPOptionsAssociation
    Condition: ShouldCreateDHCPOption
    Properties:
      VpcId: !Ref 'VPCID'
      DhcpOptionsId: !Ref 'DHCPOptions'
  ADAdminSecrets:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub 'ADAdminSecret-${AWS::StackName}'
      Description: Admin User Seccrets for Manged AD Quick Start
      SecretString: !Sub '{"username":"Admin","password":"${DomainAdminPassword}"}'
  MicrosoftAD:
    Type: AWS::DirectoryService::MicrosoftAD
    Properties:
      Name: !Ref 'DomainDNSName'
      Edition: !Ref 'ADEdition'
      ShortName: !Ref 'DomainNetBIOSName'
      Password: !Ref 'DomainAdminPassword'
      VpcSettings:
        SubnetIds:
          - !Ref 'PrivateSubnet1ID'
          - !Ref 'PrivateSubnet2ID'
        VpcId: !Ref 'VPCID'
  DomainMemberSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Domain Members
      VpcId: !Ref 'VPCID'
  MgmtStack:
    Type: AWS::CloudFormation::Stack
    Condition: ShouldCreateMgmtServer
    Properties:
      TemplateURL:
        Fn::Sub:
          - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/mgmt-1.template'
          - S3Region: !If
              - UsingDefaultBucket
              - !Ref AWS::Region
              - !Ref QSS3BucketRegion
            S3Bucket: !If
              - UsingDefaultBucket
              - !Sub '${QSS3BucketName}-${AWS::Region}'
              - !Ref QSS3BucketName
      Parameters:
        VPCCIDR: !Ref 'VPCCIDR'
        VPCID: !Ref 'VPCID'
        MgmtServerSubnet: !Ref 'PrivateSubnet1ID'
        DomainMembersSG: !Ref 'DomainMemberSG'
        MgmtServerInstanceType: !Ref 'MgmtServerInstanceType'
        MgmtDataDriveSizeGiB: !Ref 'MgmtDataDriveSizeGiB'
        KeyPairName: !Ref 'KeyPairName'
        MgmtAmi: !Ref 'MgmtAmi'
        AdministratorSecret: !Ref 'ADAdminSecrets'
        MgmtServerNetBIOSName: !Ref 'MgmtServerNetBIOSName'
        DirectoryID: !Ref 'MicrosoftAD'
        DomainController1IP: !Select [ '0', !GetAtt 'MicrosoftAD.DnsIpAddresses' ]
        DomainController2IP: !Select [ '1', !GetAtt 'MicrosoftAD.DnsIpAddresses' ]
        DomainDNSName: !Ref 'DomainDNSName'     
        DomainNetBIOSName: !Ref 'DomainNetBIOSName'       
        QSS3BucketName: !Ref 'QSS3BucketName'
        QSS3BucketRegion: !Ref 'QSS3BucketRegion'
        QSS3KeyPrefix: !Ref 'QSS3KeyPrefix'
  EntCAStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: MicrosoftAD
    Condition: ShouldCreateOneTierPkiResource
    Properties:
      TemplateURL:
        Fn::Sub:
          - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/ca-1.template'
          - S3Region: !If
              - UsingDefaultBucket
              - !Ref AWS::Region
              - !Ref QSS3BucketRegion
            S3Bucket: !If
              - UsingDefaultBucket
              - !Sub '${QSS3BucketName}-${AWS::Region}'
              - !Ref QSS3BucketName
      Parameters:
        VPCCIDR: !Ref 'VPCCIDR'
        VPCID: !Ref 'VPCID'
        EntCaServerSubnet: !Ref 'PrivateSubnet1ID'
        DomainMembersSG: !Ref 'DomainMemberSG'
        EntCaServerInstanceType: !Ref 'CaServerInstanceType'
        EntCaDataDriveSizeGiB: !Ref 'CaDataDriveSizeGiB'
        KeyPairName: !Ref 'KeyPairName'
        EntCaAmi: !Ref 'CaAmi'
        AdministratorSecret: !Ref 'ADAdminSecrets'
        EntCaServerNetBIOSName: !Ref 'EntCaServerNetBIOSName'
        DomainController1IP: !Select [ '0', !GetAtt 'MicrosoftAD.DnsIpAddresses' ]
        DomainController2IP: !Select [ '1', !GetAtt 'MicrosoftAD.DnsIpAddresses' ]
        DomainDNSName: !Ref 'DomainDNSName'     
        DomainNetBIOSName: !Ref 'DomainNetBIOSName'       
        EntCaKeyLength: !Ref 'CaKeyLength'
        EntCaHashAlgorithm: !Ref 'CaHashAlgorithm'
        EntCaValidityPeriodUnits: !Ref 'CaValidityPeriodUnits'
        UseS3ForCRL: !Ref 'UseS3ForCRL'
        S3CRLBucketName: !Ref 'S3CRLBucketName'
        DirectoryType: 'AWSManaged'
        QSS3BucketName: !Ref 'QSS3BucketName'
        QSS3BucketRegion: !Ref 'QSS3BucketRegion'
        QSS3KeyPrefix: !Ref 'QSS3KeyPrefix'
  TwoTierCAStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: MicrosoftAD
    Condition: ShouldCreateTwoTierPkiResource
    Properties:
      TemplateURL:
        Fn::Sub:
          - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/ca-1-two-tier.template'
          - S3Region: !If
              - UsingDefaultBucket
              - !Ref AWS::Region
              - !Ref QSS3BucketRegion
            S3Bucket: !If
              - UsingDefaultBucket
              - !Sub '${QSS3BucketName}-${AWS::Region}'
              - !Ref QSS3BucketName
      Parameters:
        VPCCIDR: !Ref 'VPCCIDR'
        VPCID: !Ref 'VPCID'
        OrCaServerSubnet: !Ref 'PrivateSubnet1ID'
        SubCaServerSubnet: !Ref 'PrivateSubnet1ID'
        DomainMembersSG: !Ref 'DomainMemberSG'
        OrCaServerInstanceType: !Ref 'CaServerInstanceType'
        SubCaServerInstanceType: !Ref 'CaServerInstanceType'
        OrCaDataDriveSizeGiB: !Ref 'CaDataDriveSizeGiB'
        SubCaDataDriveSizeGiB: !Ref 'CaDataDriveSizeGiB'
        KeyPairName: !Ref 'KeyPairName'
        Ami: !Ref 'CaAmi'
        AdministratorSecret: !Ref 'ADAdminSecrets'
        OrCaServerNetBIOSName: !Ref 'OrCaServerNetBIOSName'
        SubCaServerNetBIOSName: !Ref 'EntCaServerNetBIOSName'
        DomainController1IP: !Select [ '0', !GetAtt 'MicrosoftAD.DnsIpAddresses' ]
        DomainController2IP: !Select [ '1', !GetAtt 'MicrosoftAD.DnsIpAddresses' ]
        DomainDNSName: !Ref 'DomainDNSName'     
        DomainNetBIOSName: !Ref 'DomainNetBIOSName'       
        OrCaKeyLength: !Ref 'CaKeyLength'
        SubCaKeyLength: !Ref 'CaKeyLength'
        OrCaHashAlgorithm: !Ref 'CaHashAlgorithm'
        SubCaHashAlgorithm: !Ref 'CaHashAlgorithm'
        OrCaValidityPeriodUnits: !Ref 'OrCaValidityPeriodUnits'
        SubCaValidityPeriodUnits: !Ref 'CaValidityPeriodUnits'
        UseS3ForCRL: !Ref 'UseS3ForCRL'
        S3CRLBucketName: !Ref 'S3CRLBucketName'
        DirectoryType: 'AWSManaged'
        QSS3BucketName: !Ref 'QSS3BucketName'
        QSS3BucketRegion: !Ref 'QSS3BucketRegion'
        QSS3KeyPrefix: !Ref 'QSS3KeyPrefix'
Outputs:
  ADServer1PrivateIP:
    Value: !Select
      - '0'
      - !GetAtt 'MicrosoftAD.DnsIpAddresses'
    Description: AD Server 1 Private IP Address (this may vary based on Directory
      Service order of IP addresses)
  ADServer2PrivateIP:
    Value: !Select
      - '1'
      - !GetAtt 'MicrosoftAD.DnsIpAddresses'
    Description: AD Server 2 Private IP Address (this may vary based on Directory
      Service order of IP addresses)
  DirectoryID:
    Value: !Ref 'MicrosoftAD'
    Description: Directory Services ID
  DomainAdmin:
    Value: !Join
      - ''
      - - !Ref 'DomainNetBIOSName'
        - \admin
    Description: Domain administrator account
  DomainMemberSGID:
    Value: !Ref 'DomainMemberSG'
    Description: Domain Member Security Group ID
  ADSecretsArn:
    Value: !Ref 'ADAdminSecrets'
    Description: Managed AD Admin Secrets